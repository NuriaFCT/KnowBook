1686674634
waR3U4bTeM%3A236c88dd6af9c847f3f23ccc5f1f2527-a0a0a5e7dc283760a10b17fb5bdde681
s:17940:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImEwYTBhNWU3ZGMyODM3NjBhMTBiMTdmYjViZGRlNjgxIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTU6ImluZGV4LmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQ3OiJQcm95ZWN0by9yZXNvdXJjZXMvdmlld3Mvc2VhcmNoL2luZGV4LmJsYWRlLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTI1MjI6IjwhLS1ERVNDUklQQ0lPTjogVmlzdGEgZGUgYnVzcXVlZGEuIEVuIGVsbGEgaGFicmEgdW4gY2FtcG8geSBkb3MgY2F0ZWdvcmlhcyBhIGVsZWdpciBwYXJhIGJ1c2Nhcg0KRXN0YSBhcnJvamFyw6EgbG9zIHJlc3VsdGFkb3MtLT4NCjx4LWFwcC1sYXlvdXQ+DQogICAgPHgtc2xvdCBuYW1lPSJoZWFkZXIiPg0KICAgIDwveC1zbG90Pg0KDQogICAgPGRpdiBjbGFzcz0icHktNiI+DQogICAgICAgIDxkaXYgY2xhc3M9Im1heC13LTd4bCBteC1hdXRvIHNtOnB4LTYgbGc6cHgtOCI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy13aGl0ZSBzaGFkb3ctc20gc206cm91bmRlZC1sZyI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctd2hpdGUgYm9yZGVyLWIgYm9yZGVyLWdyYXktMjAwIG92ZXJmbG93LWF1dG8gIj4NCiAgICAgICAgICAgICAgICAgICAgPHgtbWVzc2FnZS1zdGF0dXMgY2xhc3M9Im1iLTQiIDpzdGF0dXM9InNlc3Npb24oJ3N0YXR1cycpIiAvPg0KDQogICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0iR0VUIiBhY3Rpb249Int7IHJvdXRlKCdzZWFyY2hzLmluZGV4JykgfX0iIGVuY3R5cGU9Im11bHRpcGFydC9mb3JtLWRhdGEiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUJ1c2NhZG9yLS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJyb3VuZGVkIG92ZXJmbG93LWhpZGRlbiBzaGFkb3ctbGcgbWItNCIgc3R5bGU9IndpZHRoOiAxMDAlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUxpc3RhIGRlc3BlZ2xhYmUgc2kgZXMgdXN1YXJpbyBvIGJsb2ctLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgbmFtZT0iY2F0ZWdvcmlhIiBpZD0iY2F0ZWdvcmlhIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLXNlbGVjdCBhcHBlYXJhbmNlLW5vbmUgYmxvY2sgdy1mdWxsIHB5LTEuNSB0ZXh0LWJhc2UgZm9udC1ub3JtYWwgdGV4dC1ncmF5LTcwMCBiZy13aGl0ZSBiZy1jbGlwLXBhZGRpbmcgYmctbm8tcmVwZWF0IGJvcmRlciBib3JkZXItc29saWQgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQgdHJhbnNpdGlvbiBlYXNlLWluLW91dCBtLTAgZm9jdXM6dGV4dC1ncmF5LTcwMCBmb2N1czpiZy13aGl0ZSBmb2N1czpib3JkZXItYmx1ZS02MDAgZm9jdXM6b3V0bGluZS1ub25lIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9IkRlZmF1bHQgc2VsZWN0IGV4YW1wbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gc2VsZWN0ZWQgdmFsdWU9InVzdWFyaW8iIG5hbWU9ImNhdGVnb3JpYSIgaWQ9InVzdWFyaW8iPlVzdWFyaW88L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJyZWNvbWVuZGFjaW9uIiBuYW1lPSJjYXRlZ29yaWEiIGlkPSJyZWNvbWVuZGFjaW9uIj5SZWNvbWVuZGFjacOzbg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1CdXNjYXIgcG9yIG5hbWUgZGUgY3VlbnRhIG8gdGl0dWxvIGRlIHBvc3QtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx4LWlucHV0IGlkPSJidXNjYXJwb3IiIHR5cGU9InNlYXJjaCIgbmFtZT0iYnVzY2FycG9yIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSJ7eyBpc3NldCgkYnVzY2FycG9yKSA/ICRidXNjYXJwb3IgOiAnJyB9fSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iSW5zZXJ0ZSBub21icmUgZGUgdW5hIGN1ZW50YSBvIHRpdHVsbyBkZSB1biBwb3N0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogNDAwcHgiIC8+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLUJ0biBFbnZpYXItLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYi0zIGlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBweC00IHB5LTIgYmctZ3JheS04MDAgYm9yZGVyIGJvcmRlci10cmFuc3BhcmVudCByb3VuZGVkLW1kIGZvbnQtc2VtaWJvbGQgdGV4dC14cyB0ZXh0LXdoaXRlIHVwcGVyY2FzZSB0cmFja2luZy13aWRlc3QgaG92ZXI6YmctZ3JheS03MDAgYWN0aXZlOmJnLWdyYXktOTAwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpib3JkZXItZ3JheS05MDAgZm9jdXM6cmluZyByaW5nLWdyYXktMzAwIGRpc2FibGVkOm9wYWNpdHktMjUgdHJhbnNpdGlvbiBlYXNlLWluLW91dCBkdXJhdGlvbi0xNTAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjYTA1YTJjOyIgdmFsdWU9IkJ1c2NhciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+DQogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tQ2F0ZWdvcmlhIGVzIGlndWFsIGEgdXN1YXJpbyBzZSBtb3N0cmFyw6EgZGUgdW5hIGZvcm1hLS0+DQogICAgICAgICAgICAgICAgICAgIEBpZiAoJGNhdGVnb3JpYSA9PSAndXN1YXJpbycpDQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1TaSBoYXkgcmVnaXN0cm9zLS0+DQogICAgICAgICAgICAgICAgICAgICAgICBAaWYgKGNvdW50KCRyZXN1bHRhZG9zKSA+IDApDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZm9yZWFjaCAoJHJlc3VsdGFkb3MgYXMgJHVzZXIpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0icm91bmRlZCBvdmVyZmxvdy1oaWRkZW4gc2hhZG93LWxnIG1iLTQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2Y3ZTVkODsgd2lkdGg6MTAwJTsgaGVpZ2h0OjEwMHB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tSW1hZ2VuIGRlIHBlcmZpbC4gU2kgbGEgaW1hZ2VuIGVzIG51bGwgc2UgbW9zdHJhcsOhIHVuYSBwb3IgZGVmZWN0by0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6MjAlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGlmIChpc3NldCgkdXNlci0+aW1hZ2VfcHJvZmlsZSkpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJiZy1pbmRpZ28tMzAwIGZsZXggZmxleC13cmFwIGp1c3RpZnktY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJtYXgtdy1mdWxsIGgtYXV0byByb3VuZGVkLWZ1bGwiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0ie3sgdXJsKCdpbWcvdXNlcnMvJyAuICR1c2VyLT5pbWFnZV9wcm9maWxlKSB9fSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImhlaWdodDogMTAwcHg7IHdpZHRoOjEwMHB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLWluZGlnby0zMDAgZmxleCBmbGV4LXdyYXAganVzdGlmeS1jZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9Im1heC13LWZ1bGwgaC1hdXRvIHJvdW5kZWQtZnVsbCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJ7eyB1cmwoJ2ltZy91c2Vycy9hdmF0YXIucG5nJykgfX0iIHN0eWxlPSIgaGVpZ2h0OiAxMDBweDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwcHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZW5kaWYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1Ob21icmUtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOiA2MCUiPjxiPnt7ICR1c2VyLT5uYW1lIH19PC9iPjwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVBhcmEgdmlzdWFsaXphciBzdSBwZXJmaWwtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjIwJSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Int7IHJvdXRlKCd1c2Vycy5wcm9maWxlJywgJHVzZXItPmlkKSB9fSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHN0eWxlPSJjb2xvcjogIzVlMzIxNyIgY2xhc3M9ImgtOCB3LTggdGV4dC15ZWxsb3ctNTAwIiBmaWxsPSJub25lIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAyNCAyNCIgc3Ryb2tlPSJjdXJyZW50Q29sb3IiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLXdpZHRoPSIyIiBkPSJNMTUgMTJhMyAzIDAgMTEtNiAwIDMgMyAwIDAxNiAweiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZS13aWR0aD0iMiINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTIuNDU4IDEyQzMuNzMyIDcuOTQzIDcuNTIzIDUgMTIgNWM0LjQ3OCAwIDguMjY4IDIuOTQzIDkuNTQyIDctMS4yNzQgNC4wNTctNS4wNjQgNy05LjU0MiA3LTQuNDc3IDAtOC4yNjgtMi45NDMtOS41NDItN3oiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRmb3JlYWNoDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tU2kgbm8gbG8gaGF5LS0+DQogICAgICAgICAgICAgICAgICAgICAgICBAZWxzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMT48Yj7CoVVwcyEgPC9iPk5vIHNlIGhhbiBlbmNvbnRyYWRvIHJlc3VsdGFkb3MgcGFyYSBsYSBiw7pzcXVlZGEgZGUgdXN1YXJpb3M8L2gxPg0KDQogICAgICAgICAgICAgICAgICAgICAgICBAZW5kaWYNCg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVNpIGVzIHBvc3Qgc2UgbW9zdHJhcsOhIGRlIG90cmEgZm9ybWEtLT4NCiAgICAgICAgICAgICAgICAgICAgQGVsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1TaSBoYXkgcmVnaXN0cm9zLS0+DQogICAgICAgICAgICAgICAgICAgICAgICBAaWYgKGNvdW50KCRyZXN1bHRhZG9zKSA+IDApDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZm9yZWFjaCAoJHJlc3VsdGFkb3MgYXMgJHBvc3QpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0icm91bmRlZCBvdmVyZmxvdy1oaWRkZW4gc2hhZG93LWxnIG1iLTQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2Y3ZTVkODsgd2lkdGg6MTAwJTsgaGVpZ2h0OjMwMHB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tSW1hZ2VuIGRlIHBvc3QuIFNpZW1wcmUgaGEgZGUgdGVuZXItLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgcm93c3Bhbj0iMyIgc3R5bGU9IiAgd2lkdGg6IDIwJSI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Int7IHVybCgnaW1nL3Bvc3RzLycgLiAkcG9zdC0+aW1hZ2UpIH19IiBoZWlnaHQ9IjEwMCIgd2lkdGg9IjcwJSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbWctdGh1bWJuYWlsIHJvdW5kZWQgZmxvYXQtbGVmdCBtci0zIiAvPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVRpdHVsby0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSIzIj48Yj57eyAkcG9zdC0+dGl0bGUgfX08L2I+PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tUGFyYSB2aXN1YWxpemFybG8tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InZlcnRpY2FsLWFsaWduOiB0b3AiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJ7eyByb3V0ZSgncG9zdHMuc2hvdycsICRwb3N0LT5pZCkgfX0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBzdHlsZT0iY29sb3I6ICM1ZTMyMTciIGNsYXNzPSJoLTggdy04IHRleHQteWVsbG93LTUwMCIgZmlsbD0ibm9uZSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94PSIwIDAgMjQgMjQiIHN0cm9rZT0iY3VycmVudENvbG9yIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZS13aWR0aD0iMiIgZD0iTTE1IDEyYTMgMyAwIDExLTYgMCAzIDMgMCAwMTYgMHoiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2Utd2lkdGg9IjIiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0yLjQ1OCAxMkMzLjczMiA3Ljk0MyA3LjUyMyA1IDEyIDVjNC40NzggMCA4LjI2OCAyLjk0MyA5LjU0MiA3LTEuMjc0IDQuMDU3LTUuMDY0IDctOS41NDIgNy00LjQ3NyAwLTguMjY4LTIuOTQzLTkuNTQyLTd6IiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tRGVzY3JpcHRpb24tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iNCI+e3sgJHBvc3QtPmRlc2NyaXB0aW9uIH19PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tTnVtZXJvIGRlIGxpa2VzLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij57eyAkcG9zdC0+bGlrZXMgfX08L3A+DQoNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1QYXJhIGRhciBsaWtlLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Int7IHJvdXRlKCdwb3N0cy5saWtlJywgJHBvc3QtPmlkKSB9fSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHN0eWxlPSJjb2xvcjogIzVlMzIxNyIgY2xhc3M9ImgtOCB3LTggdGV4dC1yZWQtNTAwIiBmaWxsPSJub25lIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAyNCAyNCIgc3Ryb2tlPSJjdXJyZW50Q29sb3IiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLXdpZHRoPSIyIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNNC4zMTggNi4zMThhNC41IDQuNSAwIDAwMCA2LjM2NEwxMiAyMC4zNjRsNy42ODItNy42ODJhNC41IDQuNSAwIDAwLTYuMzY0LTYuMzY0TDEyIDcuNjM2bC0xLjMxOC0xLjMxOGE0LjUgNC41IDAgMDAtNi4zNjQgMHoiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tRWwgbnVtZXJvIGRlIGNvbWVudGFyaW9zIHBvciBwb3N0LS0+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij57eyAkcG9zdC0+Y29tZW50YXJpb3MgfX08L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tU2kgc2UgcGljYSwgZGViZSBpciBhIGxpc3RhZG8tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0ie3sgcm91dGUoJ3Bvc3RzLmNyZWF0ZUNvbW1lbnQnLCAkcG9zdC0+aWQpIH19Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgc3R5bGU9ImNvbG9yOiAjNWUzMjE3IiBjbGFzcz0iaC04IHctOCB0ZXh0LXllbGxvdy01MDAiIHdpZHRoPSIyNCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjI0IiB2aWV3Qm94PSIwIDAgMjQgMjQiIHN0cm9rZS13aWR0aD0iMiINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U9ImN1cnJlbnRDb2xvciIgZmlsbD0ibm9uZSIgc3Ryb2tlLWxpbmVjYXA9InJvdW5kIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZS1saW5lam9pbj0icm91bmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZT0ibm9uZSIgZD0iTTAgMGgyNHYyNEgweiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMyAyMGwxLjMgLTMuOWE5IDggMCAxIDEgMy40IDIuOWwtNC43IDEiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgeDE9IjEyIiB5MT0iMTIiIHgyPSIxMiIgeTI9IjEyLjAxIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5lIHgxPSI4IiB5MT0iMTIiIHgyPSI4IiB5Mj0iMTIuMDEiIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgeDE9IjE2IiB5MT0iMTIiIHgyPSIxNiIgeTI9IjEyLjAxIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZW5kZm9yZWFjaA0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVNpIG5vIGxvIGhheS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgQGVsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+PGI+wqFVcHMhIDwvYj5ObyBzZSBoYW4gZW5jb250cmFkbyByZXN1bHRhZG9zIHBhcmEgbGEgYsO6c3F1ZWRhIGRlIHB1YmxpY2FjaW9uZXM8L2gxPg0KDQogICAgICAgICAgICAgICAgICAgICAgICBAZW5kaWYNCg0KDQogICAgICAgICAgICAgICAgICAgIEBlbmRpZg0KDQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L3gtYXBwLWxheW91dD4NCiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";