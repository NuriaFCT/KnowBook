1686674637
waR3U4bTeM%3A88fef71bcc72f7ef2448db6c5c39546b-e1a731cf61b200728b11371d73a29b3f
s:29132:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"e1a731cf61b200728b11371d73a29b3f";s:39:" phpDocumentor\Reflection\Php\File name";s:44:"de4345d50bd35b694b80cd1166644146e51a04b0.php";s:39:" phpDocumentor\Reflection\Php\File path";s:77:"Proyecto/storage/framework/views/de4345d50bd35b694b80cd1166644146e51a04b0.php";s:41:" phpDocumentor\Reflection\Php\File source";s:20857:"<!--DESCRIPCION: Vista del perfil. Se visualizara los datos de la cuenta asi como sus post
Si es usuario logueado, podra editarse-->
<?php if (isset($component)) { $__componentOriginal8e2ce59650f81721f93fef32250174d77c3531da = $component; } ?>
<?php $component = $__env->getContainer()->make(App\View\Components\AppLayout::class, [] + (isset($attributes) ? (array) $attributes->getIterator() : [])); ?>
<?php $component->withName('app-layout'); ?>
<?php if ($component->shouldRender()): ?>
<?php $__env->startComponent($component->resolveView(), $component->data()); ?>
<?php if (isset($attributes) && $constructor = (new ReflectionClass(App\View\Components\AppLayout::class))->getConstructor()): ?>
<?php $attributes = $attributes->except(collect($constructor->getParameters())->map->getName()->all()); ?>
<?php endif; ?>
<?php $component->withAttributes([]); ?>
     <?php $__env->slot('header', null, []); ?> 


        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            <?php echo e(__('Más información sobre la cuenta')); ?>

        </h2>
     <?php $__env->endSlot(); ?>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6 bg-white border-b border-gray-200">


                    <table class=" overflow-hidden  mb-4" style="width:100%; height: 300px">
                        <!--Información del autor: Foto, name, etc-->
                        <tr>
                            <td rowspan="3" style="  width: 20%">

                                <?php if(is_null($user->image_profile)): ?>
                                    <img class="max-w-full h-auto rounded-full" src="<?php echo e(url('img/users/avatar.png')); ?>"
                                        height="300" width="300" />
                                <?php else: ?>
                                    <img class="max-w-full h-auto rounded-full"
                                        src="<?php echo e(url('img/users/' . $user->image_profile)); ?>" height="300"
                                        width="300" />
                                <?php endif; ?>


                            </td>
                        </tr>
                        <!--Numero de post, seguidores y seguidos-->
                        <tr class="font-bold" style=" text-align: center; height: 40%; font-size: 35px">

                            <?php $__currentLoopData = $numposts; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $numpost): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                                <td><?php echo e($numpost->contadorPosts); ?></td>
                            <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>

                            <?php $__currentLoopData = $seguidores; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $seguidor): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                                <td><?php echo e($seguidor->contadorSeguidores); ?></td>
                            <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>

                            <?php $__currentLoopData = $siguiendo; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $seguido): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                                <td><?php echo e($seguido->contadorSeguidos); ?></td>
                            <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>

                        </tr>
                        <!--Texto-->
                        <tr style="text-align: center; height: 15%">
                            <td>Publicaciones</td>
                            <td>Seguidores</td>
                            <td>Seguidos</td>
                        </tr>                       
                        
                    </table>


                

                    

                    <!--Opciones-->
                    <table class="overflow-hidden  mb-4" style="text-align:center; width:100%; height: 50px">

                            <!--Name-->
                    <div style="height: 15%; margin-top: 50px;">
                    
                        <p colspan="3" style=" margin-bottom: 20px;" ><strong>Nombre de usuario:</strong> <?php echo e($user->name); ?>  </p>                

                    </div>

                        <tr>

                            <!--Si el usuario es admin: Seguir y eliminar o editar y eliminar-->
                            <?php if(Auth::user()->role_id == 1): ?>

                                <!--Si el perfil es suyo, podrá editarlo y eliminarlos--->
                                <?php if(Auth::user()->id == $user->id): ?>
                                    <!--Editar-->
                                    <td>
                                        <a href="<?php echo e(route('config')); ?>">
                                            <input type="submit"
                                                class="inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150"
                                                style="background-color: #a05a2c;" value="Editar usuario">
                                        </a>
                                    </td>

                                    <!--Eliminar la cuenta-->
                                    <td>
                                        <a href="<?php echo e(route('user.destroy', $user->id)); ?>">
                                            <input type="submit"
                                                class="mb-3 inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150"
                                                style="background-color: #a05a2c;" value="Eliminar usuario">
                                        </a>
                                    </td>

                                    <!-- No es su perfil, podra seguirlo o borrarlo-->
                                <?php else: ?>
                                    <!--Seguir-->
                                    <td>
                                        <?php if (isset($component)) { $__componentOriginalc254754b9d5db91d5165876f9d051922ca0066f4 = $component; } ?>
<?php $component = $__env->getContainer()->make(Illuminate\View\AnonymousComponent::class, ['view' => 'components.button','data' => []] + (isset($attributes) ? (array) $attributes->getIterator() : [])); ?>
<?php $component->withName('button'); ?>
<?php if ($component->shouldRender()): ?>
<?php $__env->startComponent($component->resolveView(), $component->data()); ?>
<?php if (isset($attributes) && $constructor = (new ReflectionClass(Illuminate\View\AnonymousComponent::class))->getConstructor()): ?>
<?php $attributes = $attributes->except(collect($constructor->getParameters())->map->getName()->all()); ?>
<?php endif; ?>
<?php $component->withAttributes([]); ?> <?php echo e(__('Seguir')); ?> <?php echo $__env->renderComponent(); ?>
<?php endif; ?>
<?php if (isset($__componentOriginalc254754b9d5db91d5165876f9d051922ca0066f4)): ?>
<?php $component = $__componentOriginalc254754b9d5db91d5165876f9d051922ca0066f4; ?>
<?php unset($__componentOriginalc254754b9d5db91d5165876f9d051922ca0066f4); ?>
<?php endif; ?>
                                    </td>
                                    <!-- Eliminar -->
                                    <td>
                                        
                                        <a href="<?php echo e(route('user.destroy', $user->id)); ?>">
                                            <input type="submit"
                                                class="mb-3 inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150"
                                                style="background-color: #a05a2c;" value="Eliminar usuario">
                                        </a>
                                    </td>
                                <?php endif; ?>
                                <!--Perfil de quien es. Admin-->
                                <!--No es admin-->
                            <?php else: ?>
                                <!--Si el perfil es suyo, podrá editarlo y eliminarlo--->
                                <?php if(Auth::user()->id == $user->id): ?>
                                    <!--Editar-->
                                    <td>
                                        <a href="<?php echo e(route('config')); ?>">
                                            <input type="submit"
                                                class="inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150"
                                                style="background-color: #a05a2c;" value="Editar usuario">
                                        </a>
                                    </td>
                                    <!--Eliminar la cuenta-->
                                    <td>
                                        <a href="<?php echo e(route('user.destroy', $user->id)); ?>">
                                            <input type="submit"
                                                class="mb-3 inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150"
                                                style="background-color: #a05a2c;" value="Eliminar usuario">
                                        </a>
                                    </td>
                                    <!-- No es su perfil, podra seguirlo-->
                                <?php else: ?>
                                    <!--Seguir-->
                                    <td>

                                        <?php if($s == 'siguiendo'): ?>
                                            <a href="<?php echo e(route('user.unfollow', $user->id)); ?>"
                                                class='inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150'
                                                style='background-color: white; color:#a05a2c'>
                                                Dejar de seguir
                                            </a>
                                        <?php else: ?>
                                            <a href="<?php echo e(route('user.follow', $user->id)); ?>"
                                                class='inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring ring-gray-300 disabled:opacity-25 transition ease-in-out duration-150'
                                                style='background-color: #a05a2c;'>
                                                Seguir
                                            </a>
                                        <?php endif; ?>

                                    </td>
                                <?php endif; ?>
                                <!--Perfil de quien es. User-->
                            <?php endif; ?>
                            <!--Rol del usuario logueado-->
                        </tr>

                        <div style="height: 15%; margin-top: 20px;">

                            <h3 colspan="3" style="font-weight: bolder;">Biografia:</h3>
    
                                <p colspan="3" style="margin-bottom:50px"><?php echo e($user->biography); ?></p>
                        </div>
                    </table>


                    <!--Publicaciones del usuario-->

                    <!--Si tiene-->

                    <?php if(count($posts) > 0): ?>

                        <?php $__currentLoopData = $posts; $__env->addLoop($__currentLoopData); foreach($__currentLoopData as $post): $__env->incrementLoopIndices(); $loop = $__env->getLastLoop(); ?>
                            <table class="rounded overflow-hidden shadow-lg mb-4"
                                style="background-color: #f7e5d8; width:100%; height:200px">
                                <tr>
                                    <?php if(isset($post->image)): ?>
                                        <td rowspan="3" style="width: 20%"><img
                                                src="<?php echo e(url('img/posts/' . $post->image)); ?>" height="100" width="70%" />
                                        </td>
                                    <?php else: ?>
                                    <td rowspan="3" style="width: 20%"><img
                                        src="<?php echo e(url('img/posts/bookpre.jpg')); ?>" height="100" width="70%" />
                                    </td>
                                    <?php endif; ?>
                                    
                                    <!--Title y verlo-->
                                    <td colspan="3"><b><?php echo e($post->title); ?></b></td>
                                    <td style="vertical-align: top">
                                        <a href="<?php echo e(route('posts.show', ['post' => $post->id])); ?>">
                                            <svg style="color: #5e3217" class="h-8 w-8 text-yellow-500" fill="none"
                                                viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                            </svg>
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <!--Description-->
                                    <td colspan="4"><?php echo e($post->description); ?></td>
                                </tr>

                                <tr>
                                    <td>

                                        <!--Numerod de likes-->
                                        <p style="text-align:right"><?php echo e($post->likes); ?></p>


                                    </td>

                                    <td>
                                        <!--Para dar like-->
                                        <a href="<?php echo e(route('posts.like', $post->id)); ?>">
                                            <svg style="color: #5e3217" class="h-8 w-8 text-red-500" fill="none"
                                                viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                            </svg>
                                        </a>
                                    </td>

                                    <!--numero de comentarios por post-->

                                    <td>
                                        <p style="text-align:right"><?php echo e($post->comentarios); ?></p>
                                    </td>


                                    <td>
                                        <a href="<?php echo e(route('posts.createComment', $post->id)); ?>">
                                            <svg style="color: #5e3217" class="h-8 w-8 text-yellow-500" width="24"
                                                height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor"
                                                fill="none" stroke-linecap="round" stroke-linejoin="round">
                                                <path stroke="none" d="M0 0h24v24H0z" />
                                                <path d="M3 20l1.3 -3.9a9 8 0 1 1 3.4 2.9l-4.7 1" />
                                                <line x1="12" y1="12" x2="12" y2="12.01" />
                                                <line x1="8" y1="12" x2="8" y2="12.01" />
                                                <line x1="16" y1="12" x2="16" y2="12.01" />
                                            </svg>
                                        </a>
                                    </td>
                                </tr>
                            </table>
                        <?php endforeach; $__env->popLoop(); $loop = $__env->getLastLoop(); ?>

                        <!--Si no hay posts-->
                    <?php else: ?>
                        <div class="flex flex-wrap justify-center">
                            <div class="w-6/12 sm:w-4/12 px-4">
                                <img src="<?php echo e(url('img/vectorLibroBW.png')); ?>" alt="VectorLibro"
                                    class="shadow rounded max-w-full h-auto align-middle border-none"
                                    style="opacity: 0.4" />
                            </div>
                        </div>
                        <!--Es mio el perfil-->
                        <?php if(Auth::user()->id == $user->id): ?>
                            <div class="h-screen flex flex-col items-center justify-center border-none">
                                <p class="text-xl mb-3 ">
                                    <strong>¡Sube tu primera recomendación!</strong> El contenido se visualizará aquí
                                </p>
                            </div>
                            <!--No lo es-->
                        <?php else: ?>
                            <div class="h-screen flex flex-col items-center justify-center border-none">
                                <p class="text-xl mb-3 ">
                                    <strong>¡Oh, oh!</strong> Este usuario no ha compartido nada actualmente
                                </p>
                            </div>
                        <?php endif; ?>

                    <?php endif; ?>


                </div>
            </div>
        </div>
    </div>
 <?php echo $__env->renderComponent(); ?>
<?php endif; ?>
<?php if (isset($__componentOriginal8e2ce59650f81721f93fef32250174d77c3531da)): ?>
<?php $component = $__componentOriginal8e2ce59650f81721f93fef32250174d77c3531da; ?>
<?php unset($__componentOriginal8e2ce59650f81721f93fef32250174d77c3531da); ?>
<?php endif; ?>
<?php /**PATH C:\xampp\htdocs\KnowBook\Proyecto\resources\views/user/profile.blade.php ENDPATH**/ ?>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";